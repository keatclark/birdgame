<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_running_fish_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise variables
//speed of player
playerSpeed = 5;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move the character
//keypress shortcuts
moveLeft = keyboard_check(ord('A'));
moveRight = keyboard_check(ord('D'));
moveUp = keyboard_check(ord('W'));
moveDown = keyboard_check(ord('S'));


//Moving the player
if(moveLeft &amp;&amp; x &gt; !room_width + sprite_width/2)
{ 
    x -= playerSpeed; 
}

if(moveRight &amp;&amp; x &lt; room_width - sprite_width /2)
{
    x += playerSpeed; 
}


if(moveUp &amp;&amp; y &gt; !room_height + sprite_width/2)
{ 
    y -= playerSpeed; 
}

if(moveDown &amp;&amp; y &lt; room_height - sprite_width/2)
{ 
    y += playerSpeed; 
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flipping &amp; Changing the sprite 
mx= mouse_x //variable for where the mouse moves along the x-axis.

//Flip the sprite according to mouse position

if mx &gt; obj_fish_player.x 

sprite_index= spr_running_fish_right 
else if 
mx &lt; obj_fish_player.x 
sprite_index = spr_running_fish_left 

//Changing from running to idle

if mx &gt; obj_fish_player.x &amp;&amp; (!keyboard_check(ord('W'))) &amp;&amp; (!keyboard_check(ord('A'))) &amp;&amp; (!keyboard_check(ord('S'))) &amp;&amp; (!keyboard_check(ord('D'))) 
// if mouse is positive (on right) AND none of WASD are pressed....
sprite_index= spr_idle_fish_right
//display the idle fish sprite, facing right. 

else if
mx &lt;obj_fish_player.x &amp;&amp; (!keyboard_check(ord('W'))) &amp;&amp; (!keyboard_check(ord('A'))) &amp;&amp; (!keyboard_check(ord('S'))) &amp;&amp; (!keyboard_check(ord('D'))) 
// if mouse is negative (on left) AND  none of WASD are pressed...
sprite_index= spr_idle_fish_left
//display the idle fish sprite, facing left. 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen 

if keyboard_check(vk_f1) {
    if window_get_fullscreen()
    {
    window_set_fullscreen(false);
    }
    else
    {
    window_set_fullscreen(true);
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,25</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>
